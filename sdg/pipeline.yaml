# PIPELINE DEFINITION
# Name: sdg
# Description: SDG pipeline for InstructLab model
# Inputs:
#    num_instructions_to_generate: int [Default: 2.0]
#    repo_branch: str
#    repo_pr: int
#    repo_url: str [Default: 'https://github.com/instructlab/taxonomy.git']
components:
  comp-git-clone-op:
    executorLabel: exec-git-clone-op
    inputDefinitions:
      parameters:
        repo_branch:
          parameterType: STRING
        repo_pr:
          parameterType: NUMBER_INTEGER
        repo_url:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        taxonomy:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
  comp-sdg-op:
    executorLabel: exec-sdg-op
    inputDefinitions:
      artifacts:
        taxonomy:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
      parameters:
        num_instructions_to_generate:
          parameterType: NUMBER_INTEGER
        repo_branch:
          parameterType: STRING
        repo_pr:
          parameterType: NUMBER_INTEGER
    outputDefinitions:
      artifacts:
        sdg:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-git-clone-op:
      container:
        args:
        - 'git clone {{$.inputs.parameters[''repo_url'']}} {{$.outputs.artifacts[''taxonomy''].path}}
          && cd {{$.outputs.artifacts[''taxonomy''].path}} && if [ ! -z "{{$.inputs.parameters[''repo_branch'']}}"
          ]; then git fetch origin {{$.inputs.parameters[''repo_branch'']}} && git
          checkout {{$.inputs.parameters[''repo_branch'']}}; elif [ ! -z "{{$.inputs.parameters[''repo_pr'']}}"
          ]; then git fetch origin pull/{{$.inputs.parameters[''repo_pr'']}}/head:{{$.inputs.parameters[''repo_pr'']}}
          && git checkout {{$.inputs.parameters[''repo_pr'']}}; fi '
        command:
        - /bin/sh
        - -c
        image: registry.access.redhat.com/ubi9/toolbox
    exec-sdg-op:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - sdg_op
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.8.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef sdg_op(\n    num_instructions_to_generate: int,\n    taxonomy:\
          \ dsl.Input[dsl.Dataset],\n    sdg: dsl.Output[dsl.Dataset],\n    repo_branch:\
          \ Optional[str],\n    repo_pr: Optional[int],\n):\n    import openai\n \
          \   from instructlab.sdg import generate_data\n    from instructlab.sdg.utils.taxonomy\
          \ import read_taxonomy\n    from os import getenv\n\n    api_key = getenv(\"\
          api_key\")\n    model = getenv(\"model\")\n    endpoint = getenv(\"endpoint\"\
          )\n    client = openai.OpenAI(base_url=endpoint, api_key=api_key)\n\n  \
          \  taxonomy_base = \"main\" if repo_branch or repo_pr else \"empty\"\n \
          \   print(read_taxonomy(taxonomy.path, taxonomy_base))\n\n    # generate_data\
          \ has a magic word for its taxonomy_base argument - `empty`\n    # it allows\
          \ generating from the whole repo, see:\n    # https://github.com/instructlab/sdg/blob/c6a9e74a1618b1077cd38e713b8aaed8b7c0c8ce/src/instructlab/sdg/utils/taxonomy.py#L230\n\
          \    generate_data(\n        client=client,\n        num_instructions_to_generate=num_instructions_to_generate,\n\
          \        output_dir=sdg.path,\n        taxonomy=taxonomy.path,\n       \
          \ taxonomy_base=taxonomy_base,\n        model_name=model,\n    )\n\n"
        image: quay.io/tcoufal/ilab-sdg:latest
pipelineInfo:
  description: SDG pipeline for InstructLab model
  displayName: InstructLab SDG
  name: sdg
root:
  dag:
    tasks:
      git-clone-op:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-git-clone-op
        inputs:
          parameters:
            repo_branch:
              componentInputParameter: repo_branch
            repo_pr:
              componentInputParameter: repo_pr
            repo_url:
              componentInputParameter: repo_url
        taskInfo:
          name: git-clone-op
      sdg-op:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-sdg-op
        dependentTasks:
        - git-clone-op
        inputs:
          artifacts:
            taxonomy:
              taskOutputArtifact:
                outputArtifactKey: taxonomy
                producerTask: git-clone-op
          parameters:
            num_instructions_to_generate:
              componentInputParameter: num_instructions_to_generate
            repo_branch:
              componentInputParameter: repo_branch
            repo_pr:
              componentInputParameter: repo_pr
        taskInfo:
          name: sdg-op
  inputDefinitions:
    parameters:
      num_instructions_to_generate:
        defaultValue: 2.0
        isOptional: true
        parameterType: NUMBER_INTEGER
      repo_branch:
        isOptional: true
        parameterType: STRING
      repo_pr:
        isOptional: true
        parameterType: NUMBER_INTEGER
      repo_url:
        defaultValue: https://github.com/instructlab/taxonomy.git
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.8.0
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-sdg-op:
          configMapAsEnv:
          - configMapName: kfp-model-server
            keyToEnv:
            - configMapKey: endpoint
              envVar: endpoint
            - configMapKey: model
              envVar: model
          secretAsEnv:
          - keyToEnv:
            - envVar: api_key
              secretKey: api_key
            secretName: kfp-model-server
